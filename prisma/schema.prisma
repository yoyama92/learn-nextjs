generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ユーザー
model User {
  id       String @id @default(uuid()) @db.Uuid /// ID
  email    String @unique /// メールアドレス
  name     String /// 名前
  password String /// パスワード

  createdAt DateTime @default(now()) @map("created_at") /// 登録日時
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") /// 更新日時

  role              UserRole? /// ユーザーの権限
  activityHistories ActivityHistory[] /// 操作履歴

  @@map("users")
}

/// ユーザーの権限
model UserRole {
  userId  String  @unique @map("user_id") @db.Uuid /// ID
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade) /// ユーザー  
  isAdmin Boolean @default(false) @map("is_admin") /// 管理者フラグ

  @@map("user_roles")
}

/// 操作履歴
model ActivityHistory {
  id     String @id @default(uuid()) @db.Uuid /// ID
  userId String @map("user_id") @db.Uuid /// ログインユーザー
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade) /// ユーザー

  createdAt DateTime @default(now()) @map("created_at") /// レコード作成日時

  loginHistory LoginHistory?

  @@map("activity_histories")
}

/// ログイン履歴
model LoginHistory {
  id              String          @unique @default(uuid()) @db.Uuid /// ID
  activityHistory ActivityHistory @relation(fields: [id], references: [id], onDelete: Cascade) /// 操作履歴テーブル

  asAdmin Boolean @map("as_admin") /// 管理者としてログイン

  createdAt DateTime @default(now()) @map("created_at") /// レコード作成日時

  @@map("login_histories")
}
